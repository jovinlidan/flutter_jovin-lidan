// Mocks generated by Mockito 5.1.0 from annotations
// in pratikum/test/model/api/contact_api_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:pratikum/model/api/contact_api.dart' as _i3;
import 'package:pratikum/model/contact_model.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeContact_0 extends _i1.Fake implements _i2.Contact {}

/// A class which mocks [ContactAPI].
///
/// See the documentation for Mockito's code generation for more information.
class MockContactAPI extends _i1.Mock implements _i3.ContactAPI {
  MockContactAPI() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.Contact>> getContacts() =>
      (super.noSuchMethod(Invocation.method(#getContacts, []),
              returnValue: Future<List<_i2.Contact>>.value(<_i2.Contact>[]))
          as _i4.Future<List<_i2.Contact>>);
  @override
  _i4.Future<_i2.Contact> getContact({int? id}) =>
      (super.noSuchMethod(Invocation.method(#getContact, [], {#id: id}),
              returnValue: Future<_i2.Contact>.value(_FakeContact_0()))
          as _i4.Future<_i2.Contact>);
  @override
  _i4.Future<_i2.Contact> postContact({_i2.Contact? contact}) =>
      (super.noSuchMethod(
              Invocation.method(#postContact, [], {#contact: contact}),
              returnValue: Future<_i2.Contact>.value(_FakeContact_0()))
          as _i4.Future<_i2.Contact>);
}
